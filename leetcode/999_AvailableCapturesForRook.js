/**
 * @param {character[][]} board
 * @return {number}
 */
var numRookCaptures = function (board) {
  // R의 위치 찾기
  let res = 0;
  let x = null;
  let y = null;

  for (let i = 0; i < board.length; i++) {
    y = board[i].findIndex(item => item === 'R');
    if (y > -1) {
      x = i;
      break;
    }
  }

  console.log('x', x, 'y', y);

  let i;
  i = y;
  while (i > 0) {
    i--;
    if (board[x][i] === 'p') {
      res++;
      break;
    }
    if (board[x][i] !== '.') break;
  }
  i = y;
  while (i < board[x].length - 1) {
    i++;
    if (board[x][i] === 'p') {
      res++;
      break;
    }
    if (board[x][i] !== '.') break;
  }
  i = x;
  while (i > 0) {
    i--;
    if (board[i][y] === 'p') {
      res++;
      break;
    }
    if (board[i][y] !== '.') break;
  }
  i = x;
  while (i < board.length - 1) {
    i++;
    if (board[i][y] === 'p') {
      res++;
      break;
    }
    if (board[i][y] !== '.') break;
  }
  return res;
};

const testCases = [
  [
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', 'R', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.']
  ]
  // [
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', 'p', '.', '.', '.', '.'],
  //   ['.', '.', '.', 'R', '.', '.', '.', 'p'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', 'p', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.']
  // ],
  // [
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
  //   ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
  //   ['.', 'p', 'B', 'R', 'B', 'p', '.', '.'],
  //   ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
  //   ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.']
  // ],
  // [
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', 'p', '.', '.', '.', '.'],
  //   ['.', '.', '.', 'R', '.', '.', '.', 'p'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', 'p', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.'],
  //   ['.', '.', '.', '.', '.', '.', '.', '.']
  // ]
];

testCases.forEach(testCase => {
  console.log(numRookCaptures(testCase));
});
