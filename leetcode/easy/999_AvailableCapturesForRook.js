/**
 * @param {character[][]} board
 * @return {number}
 */
var numRookCaptures = function (board) {
  // R의 위치 찾기

  let x = null;
  let y = null;

  for (let i = 0; i < board.length; i++) {
    y = board[i].findIndex(item => item === 'R');
    if (y > -1) {
      x = i;
      break;
    }
  }

  console.log(x, y);
  return;
};

const testCases = [
  [
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', 'p', '.', '.', '.', '.'],
    ['.', '.', '.', 'R', '.', '.', '.', 'p'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', 'p', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.']
  ]
  //   [
  //     ['.', '.', '.', '.', '.', '.', '.', '.'],
  //     ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
  //     ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
  //     ['.', 'p', 'B', 'R', 'B', 'p', '.', '.'],
  //     ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
  //     ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
  //     ['.', '.', '.', '.', '.', '.', '.', '.'],
  //     ['.', '.', '.', '.', '.', '.', '.', '.']
  //   ],
  //   [
  //     (['.', '.', '.', '.', '.', '.', '.', '.'],
  //     ['.', '.', '.', 'p', '.', '.', '.', '.'],
  //     ['.', '.', '.', 'R', '.', '.', '.', 'p'],
  //     ['.', '.', '.', '.', '.', '.', '.', '.'],
  //     ['.', '.', '.', '.', '.', '.', '.', '.'],
  //     ['.', '.', '.', 'p', '.', '.', '.', '.'],
  //     ['.', '.', '.', '.', '.', '.', '.', '.'],
  //     ['.', '.', '.', '.', '.', '.', '.', '.'])
  //   ]
];

testCases.forEach(testCase => {
  console.log(numRookCaptures(testCase));
});
